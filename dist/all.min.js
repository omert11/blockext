/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/enums.ts":
/*!**********************!*\
  !*** ./src/enums.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TagType\": () => (/* binding */ TagType)\n/* harmony export */ });\nvar TagType;\n(function (TagType) {\n    TagType[\"each\"] = \"each\";\n    TagType[\"block\"] = \"block\";\n    TagType[\"helper\"] = \"helper\";\n})(TagType || (TagType = {}));\n\n\n\n//# sourceURL=webpack://blockext/./src/enums.ts?");

/***/ }),

/***/ "./src/factory.ts":
/*!************************!*\
  !*** ./src/factory.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tagFactory\": () => (/* binding */ tagFactory)\n/* harmony export */ });\nconst bx_tag_id = (() => {\n    let tag_id = 0;\n    return () => {\n        tag_id++;\n        return tag_id - 1;\n    };\n})();\nfunction tagFactory(config) {\n    const func = (args) => {\n        const TAG = {\n            id: bx_tag_id(),\n            name: config.name,\n            type: config.type,\n            el: args.el,\n            context: args.context,\n            BX: args.BX,\n            tag_context: {},\n            add_context(key, value) {\n                TAG.tag_context[key] = value;\n            },\n            get_context(key) {\n                return TAG.tag_context[key];\n            },\n            del_context(key) {\n                delete TAG.tag_context[key];\n            },\n            get_html_attribute(el) {\n                return el.getAttribute(`bx-${TAG.name}`);\n            },\n            get_data(attrs, context) {\n                attrs.split(\".\").forEach((attr) => (context = attr == \"this\" ? context : context[attr]));\n                return context;\n            },\n            remove_tag_attribute() {\n                return TAG.el.removeAttribute(`bx-${TAG.name}`);\n            },\n            use() {\n                return {\n                    break_loop: false,\n                    context: TAG.context,\n                    ...(config.use.call(TAG) || {}),\n                };\n            },\n            get attr() {\n                return TAG.get_html_attribute(TAG.el);\n            },\n            get data() {\n                return TAG.get_data(TAG.attr, TAG.context);\n            },\n        };\n        return TAG;\n    };\n    func._name = config.name;\n    func._type = config.type;\n    return func;\n}\n\n\n\n//# sourceURL=webpack://blockext/./src/factory.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums */ \"./src/enums.ts\");\n/* harmony import */ var _factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factory */ \"./src/factory.ts\");\n/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./registry */ \"./src/registry.ts\");\n\n\n\nfunction default_each_method(el, context, loop_method, BX) {\n    const length = el.children.length;\n    for (let i = 0; i < length; i++) {\n        if (el.children?.[i])\n            loop_method.call(BX, i, el.children[i], context);\n    }\n}\nclass BlockeXt {\n    constructor(selectorOrElement) {\n        let el = null;\n        if (typeof selectorOrElement == \"string\") {\n            el = document.querySelector(selectorOrElement);\n            if (!el)\n                throw Error(`No element found in the dom with selector '${selectorOrElement}'.`);\n        }\n        else\n            el = selectorOrElement;\n        this.el = el;\n        this.main_elements = this.el.querySelectorAll(\"[bx-main]\");\n        this.raw_html = this.el.innerHTML;\n        this.tag_instances = [];\n        this.templates = {};\n        this.collect_tags(this.el);\n    }\n    collect_tags(el, regexp = /bx-(.*?)=\"(.*?)\"/g) {\n        let match_result = Array.from(el.outerHTML.matchAll(regexp));\n        let used_tags = [];\n        match_result.forEach((r) => {\n            if (!used_tags.includes(r[1]))\n                used_tags.push(r[1]);\n        });\n        this.used_tags = used_tags;\n        this.tags = _registry__WEBPACK_IMPORTED_MODULE_2__.registry.get_tag_methods(this.used_tags);\n    }\n    get_filtered_TAGS(type) {\n        if (!this[`__${type}_tag_cache`])\n            this[`__${type}_tag_cache`] = this.tags.filter((i) => i._type == type);\n        return this[`__${type}_tag_cache`];\n    }\n    *get_TAG_iter(el, context, tags) {\n        for (const tag of tags) {\n            let attribute = el.getAttribute(`bx-${tag._name}`);\n            if (attribute) {\n                const tag_instance = tag({ el, context, BX: this });\n                this.tag_instances.push(tag_instance);\n                yield tag_instance;\n            }\n        }\n    }\n    get each_tags() {\n        return this.get_filtered_TAGS(_enums__WEBPACK_IMPORTED_MODULE_0__.TagType.each);\n    }\n    get block_tags() {\n        return this.get_filtered_TAGS(_enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block);\n    }\n    get helper_tags() {\n        return this.get_filtered_TAGS(_enums__WEBPACK_IMPORTED_MODULE_0__.TagType.helper);\n    }\n    get_each_tags(el, context) {\n        return this.get_TAG_iter(el, context, this.each_tags);\n    }\n    get_block_tags(el, context) {\n        return this.get_TAG_iter(el, context, this.block_tags);\n    }\n    get_helper_tags(el, context) {\n        return this.get_TAG_iter(el, context, this.helper_tags);\n    }\n    main_loop(data) {\n        this.main_elements.forEach((el) => this.top_loop(el, data, default_each_method));\n    }\n    top_loop(el, context, each_method) {\n        let helper_response = this.do_helpers(el, context);\n        if (helper_response.break_loop)\n            return;\n        context = helper_response.context;\n        each_method(el, context, this.loop, this);\n        return el;\n    }\n    loop(i, item, context) {\n        let block_response = this.do_blocks(item, context);\n        if (!block_response.break_loop) {\n            let child_context = block_response.context;\n            let each_response = this.do_each(item, child_context);\n            this.top_loop(item, child_context, each_response.each_method || default_each_method);\n        }\n        return item;\n    }\n    do_each(el, context) {\n        let each_tag = this.get_each_tags(el, context).next().value;\n        return each_tag ? each_tag.use() : { break_loop: false, context: context };\n    }\n    do_blocks(el, context) {\n        let break_loop = false;\n        let block_iter = this.get_block_tags(el, context);\n        for (const tag of block_iter) {\n            let response = tag.use();\n            if (response.break_loop) {\n                break_loop = true;\n                break;\n            }\n            context = response.context;\n        }\n        return {\n            break_loop,\n            context,\n        };\n    }\n    do_helpers(el, context) {\n        let break_loop = false;\n        let helper_iter = this.get_helper_tags(el, context);\n        for (const tag of helper_iter) {\n            let response = tag.use();\n            if (response.break_loop) {\n                break_loop = true;\n                break;\n            }\n            context = response.context;\n        }\n        return {\n            break_loop,\n            context,\n        };\n    }\n    render(data) {\n        this.main_loop(data);\n    }\n    clean() {\n        this.el.innerHTML = this.raw_html;\n        this.main_elements = this.el.querySelectorAll(\"[bx-main]\");\n        this.tag_instances = [];\n    }\n}\nBlockeXt.registry = _registry__WEBPACK_IMPORTED_MODULE_2__.registry;\nBlockeXt.tagFactory = _factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory;\nglobalThis.BlockeXt = BlockeXt;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BlockeXt);\n\n\n//# sourceURL=webpack://blockext/./src/index.ts?");

/***/ }),

/***/ "./src/registry.ts":
/*!*************************!*\
  !*** ./src/registry.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registry\": () => (/* binding */ registry)\n/* harmony export */ });\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums */ \"./src/enums.ts\");\n/* harmony import */ var _factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factory */ \"./src/factory.ts\");\n\n\nfunction createElementFromHTML(htmlString) {\n    var div = document.createElement(\"div\");\n    div.innerHTML = htmlString.trim();\n    return div.firstChild;\n}\nconst tag_registry = [];\nconst registry = {\n    get registry() {\n        return [...tag_registry];\n    },\n    add(tag) {\n        tag_registry.push(tag);\n    },\n    get_tag_methods(arr) {\n        return registry.registry.filter((fF) => arr.includes(fF._name));\n    },\n};\n// For Tag\nconst FOR_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"for\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.each,\n    use() {\n        let loop_data = this.data;\n        if (!loop_data)\n            loop_data = [];\n        else if (!Array.isArray(loop_data))\n            loop_data = [loop_data];\n        this.remove_tag_attribute();\n        this.el.setAttribute(\"bx-each-id\", this.id.toString());\n        const loop_html = this.el.outerHTML;\n        return {\n            break_loop: false,\n            context: null,\n            each_method(el, context, loop_method, BX) {\n                for (let i = 0; i < loop_data.length; i++) {\n                    let each_context = {\n                        ...loop_data[i],\n                        \"bx-for-counter\": i + 1,\n                        \"bx-for-counter0\": i,\n                        \"bx-for-first\": i == 0,\n                        \"bx-for-last\": i == loop_data.length - 1,\n                    };\n                    let item = createElementFromHTML(loop_html);\n                    el.before(item);\n                    loop_method.call(BX, i, item, each_context);\n                }\n                el.remove();\n            },\n        };\n    },\n});\nregistry.add(FOR_TAG);\n// IF Is Tag\nconst IF_IS_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"if-is\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.each,\n    use() {\n        let nodes = [{ el: this.el, tag: \"bx-if-is\", data: this.data }];\n        let lastNode = this.el;\n        while (lastNode.nextElementSibling && [\"bx-elif-is\", \"bx-else\"].some((t) => lastNode.nextElementSibling.hasAttribute(t))) {\n            lastNode = lastNode.nextElementSibling;\n            if (lastNode.hasAttribute(\"bx-else\")) {\n                nodes.push({ el: lastNode, tag: \"bx-else\", data: true });\n                break;\n            }\n            let data = false;\n            try {\n                data = Boolean(this.get_data(lastNode.getAttribute(\"bx-elif-is\"), this.context));\n            }\n            catch (e) { }\n            nodes.push({ el: lastNode, tag: \"bx-elif-is\", data: data });\n        }\n        let active_node = nodes.find((i) => i.data);\n        nodes.filter((i) => i.el != active_node.el).forEach((e) => e.el.remove());\n        active_node.el.removeAttribute(active_node.tag);\n        return {\n            break_loop: true,\n            context: null,\n            each_method(el, context, loop_method, BX) { },\n        };\n    },\n});\nregistry.add(IF_IS_TAG);\n// As template tag\nconst AS_TEMPLATE_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"as-template\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        this.BX.templates[this.attr] = this.el.innerHTML;\n        this.el.remove();\n        return {\n            break_loop: true,\n        };\n    },\n});\nregistry.add(AS_TEMPLATE_TAG);\n// Get template tag\nconst GET_TEMPLATE_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"get-template\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        this.el.innerHTML = this.BX.templates[this.attr];\n    },\n});\nregistry.add(GET_TEMPLATE_TAG);\n// Context tag\nconst CONTEXT_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"context\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        return {\n            context: this.data,\n        };\n    },\n});\nregistry.add(CONTEXT_TAG);\n// Break Loop Tag\nconst BREAK_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"break\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        return {\n            break_loop: true,\n        };\n    },\n});\nregistry.add(BREAK_TAG);\n// Break is tag\nconst BREAK_IS_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"break-is\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        let res = {\n            break_loop: false,\n        };\n        try {\n            res.break_loop = !this.data;\n        }\n        catch (e) {\n            res.break_loop = true;\n        }\n        this.remove_tag_attribute();\n        return res;\n    },\n});\nregistry.add(BREAK_IS_TAG);\n// Show is tag\nconst SHOW_IS_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"show-is\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.block,\n    use() {\n        if (this.data)\n            this.el.style.removeProperty(\"display\");\n    },\n});\nregistry.add(SHOW_IS_TAG);\n// Get text tag\nconst GET_TEXT_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"get-text\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.helper,\n    use() {\n        this.el.innerHTML = this.data;\n    },\n});\nregistry.add(GET_TEXT_TAG);\n// Get value tag\nconst GET_VALUE_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"get-value\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.helper,\n    use() {\n        let el = this.el;\n        el.value = this.data;\n    },\n});\nregistry.add(GET_VALUE_TAG);\n// Set attr tag\nconst SET_ATTR_TAG = (0,_factory__WEBPACK_IMPORTED_MODULE_1__.tagFactory)({\n    name: \"set-attr\",\n    type: _enums__WEBPACK_IMPORTED_MODULE_0__.TagType.helper,\n    use() {\n        /**\n         * '{prop_path}>{attr_name}'\n         * or\n         * '{prop_paths}>{attr_name}]>template'\n         * sample -> 'foo,bar,baz>[name]>$$[$$][$$]'\n         */\n        let sections = this.attr.split(\">\");\n        let template = sections.length == 2 ? \"$$\" : sections[2];\n        let prop_paths = sections[0].split(\",\");\n        let props = prop_paths.map((p) => this.get_data(p, this.context));\n        template = props.reduce((p, c) => p.replace(\"$$\", c), template);\n        this.el.setAttribute(sections[1], template);\n        this.remove_tag_attribute();\n    },\n});\nregistry.add(SET_ATTR_TAG);\n\n\n\n//# sourceURL=webpack://blockext/./src/registry.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;