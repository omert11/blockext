(()=>{"use strict";const t=(()=>{let t=0;return()=>(t++,t-1)})(),e=[],r={get registry(){return[...e]},add(t){e.push(t)},get_tag_methods:t=>r.registry.filter((e=>t.includes(e.name)))};r.add(function(e){const r=r=>{const a={id:t(),name:e.name,type:e.type,el:r.el,context:r.context,get_html_attribute:t=>t.getAttribute(`bx-${a.name}`),get_data:(t,e)=>(t.split(".").forEach((t=>e=e[t])),e),remove_tag_attribute:()=>a.el.removeAttribute(a.attr),use:()=>({break_loop:!1,context:a.context,...e.use.call(a)}),clean(){if(e.clean)return e.clean.call(a)},get attr(){return a.get_html_attribute(a.el)},get data(){return a.get_data(a.attr,a.context)}};return a};return r.name=e.name,r.type=e.type,r}({name:"for",type:TagType.each,use(){this.base_attr=this.attr;let t=this.data;Array.isArray(t)||(t=[t]),this.remove_tag();const e=this.el.setAttribute("bx-each-id",this.tag_id),r=this.el.outerHTML;return this.loop_html=r,{break_loop:!1,context:null,each_method(a,n,l,o){for(let a=0;a<t.length;a++){let n={...t[a],"bx-for-counter":a+1,"bx-for-counter0":a,"bx-for-first":0==a,"bx-for-last":a==t.length-1},s=r.insertAfter(e);l.call(o,a,s,n)}e.remove()}}},clean(){}}))})();